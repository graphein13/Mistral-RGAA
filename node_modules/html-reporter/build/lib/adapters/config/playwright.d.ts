import type { ConfigAdapter } from './index';
import type { FullConfig, FullProject } from '@playwright/test/reporter';
import type { TestAdapter } from '../test';
export type PwtProject = FullProject & {
    snapshotPathTemplate?: string;
};
export type PwtConfig = FullConfig & {
    testDir?: string;
    snapshotDir?: string;
    snapshotPathTemplate?: string;
    projects?: PwtProject[];
};
export declare const DEFAULT_BROWSER_ID = "chromium";
export declare class PlaywrightConfigAdapter implements ConfigAdapter {
    private _config;
    private _browserIds;
    static create<T extends PlaywrightConfigAdapter>(this: new (config: PwtConfig) => T, config: PwtConfig): T;
    constructor(config: PwtConfig);
    get original(): PwtConfig;
    get tolerance(): number;
    get antialiasingTolerance(): number;
    get browserIds(): string[];
    getScreenshotPath(test: TestAdapter, stateName: string): string;
}
